# PIPELINE DEFINITION
# Name: create-s3-dataset-with-alluxioruntime
# Inputs:
#    cache_capacity: float
#    cache_replicas: int
#    cred_secret_name: str
#    dataset_name: str
#    mount_point: str
#    namespace: str
#    s3_endpoint: str
#    s3_region: str
components:
  comp-create-s3-dataset-with-alluxioruntime:
    executorLabel: exec-create-s3-dataset-with-alluxioruntime
    inputDefinitions:
      parameters:
        cache_capacity:
          parameterType: NUMBER_DOUBLE
        cache_replicas:
          parameterType: NUMBER_INTEGER
        cred_secret_name:
          parameterType: STRING
        dataset_name:
          parameterType: STRING
        mount_point:
          parameterType: STRING
        namespace:
          parameterType: STRING
        s3_endpoint:
          parameterType: STRING
        s3_region:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-create-s3-dataset-with-alluxioruntime:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - create_s3_dataset_with_alluxioruntime
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.7.0'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'git+https://github.com/fluid-cloudnative/fluid-client-python.git'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef create_s3_dataset_with_alluxioruntime(\n    dataset_name: str,\n\
          \    namespace: str,\n    mount_point: str,\n    s3_endpoint: str,\n   \
          \ s3_region: str,\n    cred_secret_name: str,\n    cache_replicas: int,\n\
          \    cache_capacity: float\n):\n    import logging\n    import fluid\n \
          \   from fluid import constants\n\n    fluid_client = fluid.FluidClient(fluid.ClientConfig())\n\
          \n    options = {\n        \"alluxio.underfs.s4.endpoint\": s3_endpoint,\n\
          \        \"alluxio.underfs.s3.endpoint.region\": s3_region,\n        \"\
          alluxio.underfs.s3.disable.dns.buckets\": \"true\",\n        \"alluxio.underfs.s3.disable.inherit.acl\"\
          : \"false\"\n    }\n\n    cred_secret_options = {\n        \"aws.accessKeyId\"\
          : \"aws.accessKeyId\",\n        \"aws.secretKey\": \"aws.secretKey\",\n\
          \    }\n\n    fluid_client.create_dataset(\n        dataset_name=dataset_name,\n\
          \        namespace=namespace,\n        mount_name=dataset_name,\n      \
          \  mount_point=mount_point,\n        cred_secret_name=cred_secret_name,\n\
          \        cred_secret_options=cred_secret_options,\n        options=options\n\
          \    )\n\n    dataset = fluid_client.get_dataset(dataset_name=dataset_name,\
          \ namespace=namespace)\n\n    dataset.bind_runtime(\n        runtime_type=constants.ALLUXIO_RUNTIME_KIND,\n\
          \        replicas=cache_replicas,\n        cache_capacity_GiB=cache_capacity,\n\
          \        wait=True\n    )\n\n    logging.info(f\"Dataset \\\"{namespace}/{dataset_name}\\\
          \" is created and bond to AlluxioRuntime \\\"{namespace}/{dataset_name}\\\
          \" successfully\")\n    logging.info(f\"Cache replicas: {cache_replicas},\
          \ Cache capacity: {cache_capacity}, Total cache capacity: {cache_replicas\
          \ * cache_capacity}\")\n\n"
        image: python:3.7
pipelineInfo:
  name: create-s3-dataset-with-alluxioruntime
root:
  dag:
    tasks:
      create-s3-dataset-with-alluxioruntime:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-create-s3-dataset-with-alluxioruntime
        inputs:
          parameters:
            cache_capacity:
              componentInputParameter: cache_capacity
            cache_replicas:
              componentInputParameter: cache_replicas
            cred_secret_name:
              componentInputParameter: cred_secret_name
            dataset_name:
              componentInputParameter: dataset_name
            mount_point:
              componentInputParameter: mount_point
            namespace:
              componentInputParameter: namespace
            s3_endpoint:
              componentInputParameter: s3_endpoint
            s3_region:
              componentInputParameter: s3_region
        taskInfo:
          name: create-s3-dataset-with-alluxioruntime
  inputDefinitions:
    parameters:
      cache_capacity:
        parameterType: NUMBER_DOUBLE
      cache_replicas:
        parameterType: NUMBER_INTEGER
      cred_secret_name:
        parameterType: STRING
      dataset_name:
        parameterType: STRING
      mount_point:
        parameterType: STRING
      namespace:
        parameterType: STRING
      s3_endpoint:
        parameterType: STRING
      s3_region:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.7.0
